name: build

on:
  workflow_call:
    inputs:
      updateKustomize:
        description: "Update kustomize overlays"
        type: boolean
        required: false
      skipTests:
        description: "Skip extended testing (unit and other tests), only build artifacts"
        type: boolean
        required: false
        default: false
      environments:
        type: string
        required: true
      modules:
        type: string
        required: true
      modules-string:
        type: string
        required: true
      profile:
        type: string
        required: true
      ecr-repository-code:
        type: string
        required: true
      ecr-repository-region:
        type: string
        required: true
      caller-workflow-type:
        type: string
        required: true
      python-version:
        type: string
        required: false
        default: 3.8

jobs:

  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.build-and-tag.outputs.tag }}
    steps:

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install pipenv
        run: pip install pipenv

      - name: Install Requirements and Run Pytest
        env:
          JENKINS: true
          IS_JENKINS: true
          AWS_ACCESS_KEY_ID: ${{ secrets.BACKEND_FILE_AWS_ACCESS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BACKEND_FILE_AWS_SECRET_ACCESS_KEY }}
        run: |
          pipenv install --dev
          pipenv requirements > pipenv-requirements.txt
          cat manual-requirements.txt pipenv-requirements.txt > requirements.txt
          pipenv run pip install pip-licenses
          pipenv run pip install -r manual-requirements.txt
          pipenv run pytest tests --junitxml=report.xml
          pipenv run junit2html report.xml report.html
          mkdir report-dir && mv report.html ./report-dir/report.html

      - name: Upload Test Reports to S3
        id: reports
        if: needs.init.outputs.skip-tests != 'true' && (success() || failure())
        uses: hawk-ai-aml/upload-s3-action@master
        with:
          aws_key_id: ${{ secrets.AWS_DEV_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_DEV_SECRET_ACCESS_KEY }}
          aws_bucket: github-actions-static-html-2
          source_dir: ./report-dir
          destination_dir: ${{ github.event.repository.name }}-${{ github.run_id }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ inputs.profile == 'nab' && secrets.AWS_NAB_DEV_ECR_ACCESS_KEY_ID || secrets.AWS_ORG_ECR_ACCESS_KEY_ID }}
          aws-region: ${{ inputs.profile == 'nab' && 'us-east-1' || secrets.AWS_ORG_ECR_SECRET_ACCESS_KEY && 'eu-central-1' }}
          aws-secret-access-key: ${{ inputs.profile == 'nab' && secrets.AWS_NAB_DEV_ECR_SECRET_ACCESS_KEY || secrets.AWS_ORG_ECR_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ${{ inputs.ecr-repository-code }}

      - name: Build and tag images
        id: build-and-tag
        env:
          MODULES: ${{ inputs.modules-string }}

        run: |
          echo "WORKFLOW TYPE:"
          echo ${{ inputs.caller-workflow-type }}
          echo $MODULES
          REGISTRY=${{ inputs.ecr-repository-code }}.dkr.ecr.${{ inputs.ecr-repository-region }}.amazonaws.com
          TAG=${{ github.ref_name }}
          # add github commit sha if the job is not called by the TAG pipeline
          if [[ ! ${{ inputs.caller-workflow-type }} == 'tag' ]]; then
            TAG+="-${{ github.sha }}"
          fi
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          for module in $MODULES
          do
            REPOSITORY_FOLDER=$(echo ${module} | sed 's/\_/\-/g')
            if [[ ${{ inputs.profile }} == 'nab' ]]; then
              REPOSITORY_FULL_NAME="${REGISTRY}/hawk-ai-scores-${REPOSITORY_FOLDER}"
            else
              REPOSITORY_FULL_NAME="${REGISTRY}/ai-scores-${REPOSITORY_FOLDER}"
            fi
            echo "$REPOSITORY_FULL_NAME is building..."
            DOCKER_BUILDKIT=1 docker build --build-arg SERVICE=${module} -t ${REPOSITORY_FULL_NAME}:${TAG} .
            docker push ${REPOSITORY_FULL_NAME}:${TAG}
          done

  update-overlays:
    if: inputs.updateKustomize == true
    needs: build
    runs-on: [ "self-hosted", "builder" ]
    strategy:
      max-parallel: 1
      matrix:
        overlay: ${{fromJson(inputs.environments)}}
        module: ${{fromJson(inputs.modules)}}

    steps:
      - name: Checkout Kustomize (GitHub)
        uses: actions/checkout@v3
        with:
          repository: hawk-ai-aml/kustomize.git
          token: ${{ secrets.REPO_ACCESS_PAT }}
          ref: master

      - name: Update Kustomize (GitHub)
        run: |
          cd ${{ github.workspace }}/plattform/processing/features/${{ matrix.module }}/overlays/${{ matrix.overlay }}
          REPOSITORY_FOLDER=$(echo ${{ matrix.module }} | sed 's/\_/\-/g')
          if [[ ${{ inputs.profile }} == 'nab' ]]; then
            REPOSITORY_FULL_NAME="${{ inputs.ecr-repository-code }}.dkr.ecr.${{ inputs.ecr-repository-region }}.amazonaws.com/hawk-ai-scores-${REPOSITORY_FOLDER}"
          else
            REPOSITORY_FULL_NAME="${{ inputs.ecr-repository-code }}.dkr.ecr.${{ inputs.ecr-repository-region }}.amazonaws.com/ai-scores-${REPOSITORY_FOLDER}"
          fi
          TAG=${{ needs.build.outputs.tag }}
          kustomize edit set image $REPOSITORY_FULL_NAME:$TAG
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@hawk.ai"
          if [[ -z $(git status -s) ]]; then
            echo "no changes in overlays ${overlays} (TAG: $TAG)"
          else
            git add .
            git commit -m "AUTOMATIC COMMIT: Update ${{ matrix.module }} on ${{ matrix.overlay }} to $TAG "
            git push
          fi

