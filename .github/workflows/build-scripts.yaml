name: build
on:
  workflow_call:
    inputs:
      updateKustomize:
        description: "Update kustomize overlays (true/false)"
        type: boolean
        required: false
      kustomizeOverlays:
        description: "Overlays to update"
        type: string
        required: false
      component:
        description: "Name of the repository"
        type: string
        required: true

defaults:
  run:
    shell: bash -l -ET -eo pipefail {0}

jobs:
  init:
    name: Init workflow
    runs-on: [ "self-hosted", "small-builder" ]
    outputs:
      overlays: ${{ steps.init.outputs.overlays }}
      image-tag: ${{ steps.init.outputs.image-tag }}
      update-kustomize: ${{ steps.init.outputs.update-kustomize }}
      kustomize-modules-string: ${{ steps.init.outputs.kustomize-modules-string }}
      ecr-url: ${{ steps.init.outputs.ecr-url }}
      ecr-registry-code: ${{ steps.init.outputs.ecr-registry-code }}
      ecr-region: ${{ steps.init.outputs.ecr-region }}
      updated-modules: ${{ steps.detect-changes.outputs.updated-modules }}
      updated-modules-string: ${{ steps.detect-changes.outputs.updated-modules-string }}
      metadata: ${{ steps.init.outputs.metadata }}
      custom-tags: ${{ steps.custom-tags.outputs.custom_tags }}

    steps:
      - id: init
        name: Init Workflow
        uses: hawk-ai-aml/github-actions/workflow-init@master
        with:
          overlays: ${{ inputs.kustomizeOverlays }}
          update-kustomize: ${{ inputs.updateKustomize }}
          repository-name: hawk-ai-aml/${{ inputs.component }}
          repository-ref: ${{ env.GITHUB_REF_NAME }}
          repository-access-token: ${{ secrets.REPO_ACCESS_PAT }}

      - id: detect-changes
        name: Detect changes
        uses: hawk-ai-aml/github-actions/repository-detect-changes@master
        with:
          repository: hawk-ai-aml/${{ inputs.component }}
          repository-ref: ${{ env.GITHUB_REF_NAME }}
          repository-user: ${{ secrets.RECREATE_DEVELOP_GITHUB_USER }}
          repository-access-token: ${{ secrets.REPO_ACCESS_PAT }}
          modules-string: ${{ steps.init.outputs.kustomize-modules-string }}

      - id: custom-tags
        name: Generate a list of Docker tags for all modules
        env:
          ECR_REPOSITORIES: ${{ steps.init.outputs.ecr-repositories }}
          IMAGE_TAG: ${{ steps.init.outputs.image-tag }}
        run: |
          CUSTOM_TAGS=""
          for repo in $ECR_REPOSITORIES; do
            NEW_TAG=${repo}-${IMAGE_TAG}
            CUSTOM_TAGS="$CUSTOM_TAGS $NEW_TAG"
          done
          echo "custom_tags=$CUSTOM_TAGS" >> $GITHUB_OUTPUT

      - name: Slack notification for failed init workflow
        uses: hawk-ai-aml/github-actions/send-slack-notification@master
        if: failure()
        with:
          notify-pr-author: true
          slack-message: ":x: The init workflow failed. Please check the reason for it and contact @team-pe."
          slack-access-token: ${{ secrets.SLACK_RELEASE_BOT_ACCESS_TOKEN }}
          github-users-access-token: ${{ secrets.USER_GITHUB_ACCESS }}

  build:
    needs: [ init ]
    runs-on: [ "self-hosted", "small-builder" ]
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJson(needs.init.outputs.updated-modules) }}

    steps:
      - name: Checkout master
        uses: actions/checkout@v4
        with:
          ref: master
          # From SonarCloud Scan GitHub Action
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 1000

      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.GITHUB_REF_NAME }}
          # From SonarCloud Scan GitHub Action
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 1000

      - name: Get ECR info
        id: ecr-info
        env:
          METADATA: ${{ needs.init.outputs.metadata }}
          CUSTOM_TAGS: ${{ needs.init.outputs.custom-tags }}
          MODULE: ${{ matrix.module }}
          KUSTOMIZE_OVERLAYS: ${{ inputs.kustomizeOverlays }}
        run: |
          RED='\033[0;31m'
          MODULE_ECR=$(echo ${METADATA} | jq -cr --arg MODULE ${{ matrix.module }} '.modules[$MODULE].ecr')
          echo "ECR=$MODULE_ECR"

          if [[ "$MODULE" == *"_"* ]]; then
            MODULE="${MODULE//_/-}"
          fi

          if [[ $KUSTOMIZE_OVERLAYS == "prod" ]]; then
            MATCHED_TAG=$(echo "$CUSTOM_TAGS" | tr ' ' '\n' | grep -E "(^|[-])$MODULE-[0-9]"  | head -n 1 || true)
          else
            MATCHED_TAG=$(echo "$CUSTOM_TAGS" | tr ' ' '\n' | grep -E "(^|[-])${MODULE}([-]|$)" | head -n 1 || true)
          fi
          echo -e "${RED}MATCHED_TAG=$MATCHED_TAG"
          echo "module_ecr=$MODULE_ECR" >> $GITHUB_OUTPUT
          echo "matched_tag=$MATCHED_TAG" >> $GITHUB_OUTPUT

      - name: Build Docker Image
        if: ${{ github.workflow != 'pr' }}
        uses: hawk-ai-aml/github-actions/build-docker-image-python@master
        with:
          multiple-modules: "true"
          module-isolated: "true"
          module: ${{ matrix.module }}
          image-tag: ${{ needs.init.outputs.image-tag }}
          ecr-repository-prefix: ""
          custom-image-tag: ${{ steps.ecr-info.outputs.matched_tag }}
#          kustomize-overlays: ${{ inputs.kustomizeOverlays }}
          kustomize-overlays: "dev"
          ecr-repository: ${{ steps.ecr-info.outputs.module_ecr }}
          hawk-platform-repository: "hawk-platform"
          aws-org-ecr-access-key-id: ${{ secrets.AWS_ORG_ECR_ACCESS_KEY_ID }}
          aws-org-ecr-secret-access-key: ${{ secrets.AWS_ORG_ECR_SECRET_ACCESS_KEY }}
          ecr-region: ${{ needs.init.outputs.ecr-region }}
          ecr-registry-code: ${{ needs.init.outputs.ecr-registry-code }}
          py-utils-pat: ${{ secrets.PY_UTILS_PAT }}

      - name: Slack notification for failed build status
        uses: hawk-ai-aml/github-actions/send-slack-notification@master
        if: failure()
        with:
          notify-pr-author: true
          slack-message: ":x: Your build failed. Please check the reason for it."
          slack-access-token: ${{ secrets.SLACK_RELEASE_BOT_ACCESS_TOKEN }}
          github-users-access-token: ${{ secrets.USER_GITHUB_ACCESS }}

  update-overlays:
    needs: [ init, build ]
    if: ${{ needs.init.outputs.update-kustomize == 'true' && github.workflow != 'pr' }}
    runs-on: [ "self-hosted", "small-builder" ]

    steps:
      - name: Update kustomize-base overlay
        uses: hawk-ai-aml/github-actions/kustomize-base-overlay@pe-check
        with:
          slack-access-token: ${{ secrets.SLACK_RELEASE_BOT_ACCESS_TOKEN }}
          github-users-access-token: ${{ secrets.USER_GITHUB_ACCESS }}
          overlays: "prod/ap-southeast-1 prod/ap-southeast-2 eco-bank/uat eco-bank/prod"
#          overlays: ${{ needs.init.outputs.overlays }}
          modules: ${{ needs.init.outputs.kustomize-modules-string }}
          component-name: ${{ inputs.component }}
          component-tag: ${{ needs.init.outputs.image-tag }}
          component-custom-tags: ${{ needs.init.outputs.custom-tags }}
          kustomize-access-token: ${{ secrets.REPO_ACCESS_PAT }}
          ecr-region: ${{ needs.init.outputs.ecr-region }}
          ecr-registry-code: ${{ needs.init.outputs.ecr-registry-code }}
          metadata: ${{ needs.init.outputs.metadata }}
