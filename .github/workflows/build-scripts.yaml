name: build
on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: Environment
        required: false
      ref:
        type: string
        description: Tag or branch name
        required: false
      metadata:
        description: The metadata for the test
        type: string
        required: false

defaults:
  run:
    shell: bash -l -ET -eo pipefail {0}

jobs:
  build-image:
    name: build image
    runs-on: [ "self-hosted", "small-builder" ]
    outputs:
      dev-tag: ${{ steps.build-and-push-image.outputs.dev-tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure HAWK AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ORG_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ORG_ECR_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to HAWK Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: "860641649575"

      - name: Build and push image
        id: build-and-push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: grafana
        run: |
          GIT_SHA_SHORT=${GITHUB_SHA:0:7}
          echo "dev-tag=develop-${GIT_SHA_SHORT}" >> $GITHUB_OUTPUT

          docker build -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:develop-${GIT_SHA_SHORT} .
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:develop-${GIT_SHA_SHORT}
