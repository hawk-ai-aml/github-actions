name: Create teleport role
on:
  workflow_dispatch:
      inputs:
        user_manage:
          description: "User manage teleport cluster"
          type: string
        password_user_manage:
          description: "Password user manage teleport cluster"
          type: string
        cluster_teleport:
          description: "Teleport cluster address"
          type: choice
          options:
            - teleport.dev.aml-ai.net
          required: true
        OTP_admin:
          description: "Input OTP admin"
          type: string
          default: "123456"
          required: true
        role_path:
          description: "Role path"
          type: string
          default: "teleport/dev/roles/developer.yaml"
          required: true
        slack_webhook:
          description: "webhook"
          type: string
jobs:
  create-role:
    name: Run create role
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependency
        run: |
          sudo curl https://apt.releases.teleport.dev/gpg -o /usr/share/keyrings/teleport-archive-keyring.asc
          source /etc/os-release
          echo "deb [signed-by=/usr/share/keyrings/teleport-archive-keyring.asc] \
          https://apt.releases.teleport.dev/${ID?} ${VERSION_CODENAME?} stable/v13" \
          | sudo tee /etc/apt/sources.list.d/teleport.list > /dev/null
          sudo apt-get update
          sudo apt-get install teleport expect -y
      - name: Check teleport version
        run: tctl version
      - name: Check teleport version 
        run: tsh version
      - name: login teleport cluster
        run: |
          expect << EOF
            spawn tsh login --proxy=${{ inputs.cluster_teleport }}  --user=${{ inputs.user_manage }}
            expect "Enter password for Teleport user ${{ inputs.user_manage }}:"
            send "${{ inputs.password_user_manage }}\r"
            expect "Enter an OTP code from a device:"
            send "${{ inputs.OTP_admin }}\r"
            expect eof
          EOF
      - name: Verify login success
        run: tctl status 
      - name: Create new roles
        id: role_info 
        run: |
          tctl create -f ${{ inputs.role_path }} >> tmp.txt
          echo "::set-output name=ROLE_INFO::$(cat tmp.txt)"         
      - name: Verify new roles
        run: tctl get roles --format text 
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_MESSAGE: New role create on ${{ inputs.cluster_teleport }}/web/roles
          SLACK_TITLE: ${{ steps.role_info.outputs.ROLE_INFO }}
          SLACK_WEBHOOK: ${{ inputs.slack_webhook }}
