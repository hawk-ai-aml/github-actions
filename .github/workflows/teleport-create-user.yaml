name: Create teleport user
on:
  workflow_dispatch:
      inputs:
        user_manage:
          description: "User manage teleport cluster"
          type: string
        password_user_manage:
          description: "Password user manage teleport cluster"
          type: string
        cluster_teleport:
          description: "Address teleport cluster"
          type: choice
          options: 
          - teleport.dev.aml-ai.net
          required: true
        OTP_secret:
          description: "Input OTP secret"
          type: string
          default: "123456"
          required: true
        user_name:
          description: "Create user name"
          type: string
          required: true
        user_role:
          description: "Assign roles to user"
          type: choice
          options:
          - developer
          - admin
          - super-admin 
          required: true
        slack_webhook:
          description: "webhook"
          type: string
jobs:
  Create-user:
    name: Run create user
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependency
        run: |
          sudo curl https://apt.releases.teleport.dev/gpg -o /usr/share/keyrings/teleport-archive-keyring.asc
          source /etc/os-release
          echo "deb [signed-by=/usr/share/keyrings/teleport-archive-keyring.asc] \
          https://apt.releases.teleport.dev/${ID?} ${VERSION_CODENAME?} stable/v13" \
          | sudo tee /etc/apt/sources.list.d/teleport.list > /dev/null
          sudo apt-get update
          sudo apt-get install teleport expect -y

      - name: Check teleport version
        run: tctl version
      - name: Check teleport version 
        run: tsh version
      - name: login teleport cluster
        run: |
          expect << EOF
            spawn tsh login --proxy=${{ inputs.cluster_teleport }}  --user=${{ inputs.user_manage }}
            expect "Enter password for Teleport user ${{ inputs.user_manage }}:"
            send "${{ inputs.password_user_manage }}\r"
            expect "Enter an OTP code from a device:"
            send "${{ inputs.OTP_secret }}\r"
            expect eof
          EOF
      - name: Verify login success
        run: tctl status 
      - name: Create user name
        id: user_info
        run: |
          tctl users add ${{ inputs.user_name }} --roles=${{ inputs.user_role }} >> tmp.txt
          echo "::set-output name=USER_INFO::$(cat tmp.txt | grep http)"
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_MESSAGE: ${{ steps.user_info.outputs.USER_INFO }}
          SLACK_TITLE: User `${{ inputs.user_name }}` has been created access URL to complete user setup
          SLACK_WEBHOOK: ${{ inputs.slack_webhook }}
