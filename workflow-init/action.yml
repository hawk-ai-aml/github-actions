# Deprecated, use library functions

name: workflow-init
description: Workflow Init Action

inputs:
  slack-notification-webhook:
    description: "Encoded Slack URL"
    required: false
  component:
    description: "Component to retrieve metadata"
    required: true
  profile:
    description: Metadata profile
    required: false
    default: hawk
  skip-tests:
    description: "Hint to skip tests"
    required: false
    default: "false"
  update-kustomize:
    description: "Hint to update kustomize"
    required: false
    default: "true"
  overlays:
    description: "Overlays to update"
    required: false
    default: dev

outputs:
  metadata:
    description: 'repository metadata'
    value: ${{ steps.vars.outputs.metadata }}

  overlays:
    description: 'repository overlays'
    value: ${{ steps.vars.outputs.overlays }}

  modules:
    description: 'repository modules'
    value: ${{ steps.vars.outputs.modules }}

  kustomizable-modules:
    description: 'repository modules with ECR and kustomize settings'
    value: ${{ steps.vars.outputs.kustomizable-modules }}

  parameters:
    description: 'repository workflow parameters'
    value: ${{ steps.vars.outputs.parameters }}

  update-kustomize:
    description: 'Hint to update kustomize'
    value: ${{ steps.vars.outputs.update-kustomize }}

  skip-tests:
    description: 'Hint to skip tests'
    value: ${{ steps.vars.outputs.skip-tests }}

runs:
  using: composite
  steps:
    - id: job-init
      name: Init Job
      uses: hawk-ai-aml/github-actions/job-init@master
      with:
        slack-notification-webhook: ${{ inputs.slack-notification-webhook }}

    - id: vars
      shell: bash -l -ET -eo pipefail {0}
      run: |
        UPDATE_KUSTOMIZE=${{ inputs.update-kustomize }}
        UPDATE_KUSTOMIZE=${UPDATE_KUSTOMIZE:-true}

        KUSTOMIZE_OVERLAYS=${{ inputs.overlays }}
        KUSTOMIZE_OVERLAYS=${KUSTOMIZE_OVERLAYS:-dev}

        SKIP_TESTS=${{ inputs.skip-tests }}
        SKIP_TESTS=${SKIP_TESTS:-false}
        
        VULNERABILITY_CHECK=${{ inputs.vulnerabilityCheck }}
        VULNERABILITY_CHECK=${VULNERABILITY_CHECK:-false}

        METADATA_JSON=$(yj -y < ${GITHUB_ACTION_PATH}/profile/${{ inputs.profile }}.yml \
          | jq -cr --arg COMPONENT ${{ inputs.component }} '.component[$COMPONENT]')

        OVERLAYS_JSON=$(yj -y < ${GITHUB_ACTION_PATH}/profile/${{ inputs.profile }}.yml \
          | jq -cr --arg COMPONENT ${{ inputs.component }} --arg OVERLAYS ${KUSTOMIZE_OVERLAYS} '.component[$COMPONENT].kustomize.overlays[$OVERLAYS]')

        MODULES_JSON=$(yj -y < ${GITHUB_ACTION_PATH}/profile/${{ inputs.profile }}.yml \
          | jq -cr --arg COMPONENT ${{ inputs.component }} '.component[$COMPONENT].modules')

        if [[ ${MODULES_JSON} != "null" ]]; then
          echo "${{ inputs.component }} is a multi-module component"
          MODULES_LIST_JSON=$(echo ${MODULES_JSON} | jq -cr 'keys')

          KUSTOMIZABLE_MODULES_LIST_JSON=$(echo ${MODULES_JSON} \
            | jq -cr '[to_entries | .[] | select(.value.ecr.repository) | select(.value.kustomize.path) | .key]')
        fi

        PARAMETERS_JSON=$(yj -y < ${GITHUB_ACTION_PATH}/profile/${{ inputs.profile }}.yml \
          | jq -cr --arg COMPONENT ${{ inputs.component }} '.component[$COMPONENT].parameters')

        cat <<EOF | tee -a ${GITHUB_STEP_SUMMARY}

        \`\`\`
        Workflow: ${HAWK_WORKFLOW_ID}
        Attempt: ${GITHUB_RUN_ATTEMPT}
        Name: ${GITHUB_WORKFLOW}
        Inputs: ${{ toJSON(inputs) }}
        \`\`\`
        \`\`\`
        EOF

        cat <<EOF | tee -a ${GITHUB_STEP_SUMMARY} | tee -a ${GITHUB_OUTPUT}
        metadata=${METADATA_JSON}
        overlays=${OVERLAYS_JSON}
        modules=${MODULES_LIST_JSON}
        kustomizable-modules=${KUSTOMIZABLE_MODULES_LIST_JSON}
        parameters=${PARAMETERS_JSON}
        update-kustomize=${UPDATE_KUSTOMIZE}
        skip-tests=${SKIP_TESTS}
        vulnerability-check=${VULNERABILITY_CHECK}
        EOF

        cat <<EOF | tee -a ${GITHUB_STEP_SUMMARY}
        \`\`\`
        EOF

# End of file
