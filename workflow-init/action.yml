name: workflow-init
description: Workflow Init Action

inputs:
  component:
    description: "Component to retrieve metadata"
    required: true
  profile:
    description: Metadata profile
    required: false
    default: hawk
  skip-tests:
    description: "Hint to skip tests"
    required: false
    default: "false"
  update-kustomize:
    description: "Hint to update kustomize"
    required: false
    default: "true"
  overlays:
    description: "Overlays to update"
    required: false
    default: dev

outputs:
  metadata:
    description: 'repository metadata'
    value: ${{ steps.vars.outputs.metadata }}

  overlays:
    description: 'repository overlays'
    value: ${{ steps.vars.outputs.overlays }}

  parameters:
    description: 'repository workflow parameters'
    value: ${{ steps.vars.outputs.parameters }}

  update-kustomize:
    description: 'Hint to update kustomize'
    value: ${{ steps.vars.outputs.update-kustomize }}

  skip-tests:
    description: 'Hint to skip tests'
    value: ${{ steps.vars.outputs.skip-tests }}

runs:
  using: composite
  steps:
    - id: job-init
      name: Init Job
      uses: hawk-ai-aml/job-init@master

    - name: Install yj
      shell: bash
      env:
        YJ_VERSION: 5.1.0
      run: |
        mkdir -p "${HOME}"/bin
        echo "PATH=${HOME}/bin:${PATH}" >> "${GITHUB_ENV}"
        echo "Installing yj ${YJ_VERSION}"
        sudo curl \
          --show-error \
          --silent \
          --location \
          --fail \
          --retry 3 \
          --connect-timeout 5 \
          --max-time 60 \
          --output "${HOME}/bin/yj" \
          "https://github.com/sclevine/yj/releases/download/v${YJ_VERSION}/yj-linux-amd64"
        sudo chmod +x "${HOME}"/bin/yj

    - id: vars
      shell: bash
      run: |
        UPDATE_KUSTOMIZE=${{ inputs.update-kustomize }}
        UPDATE_KUSTOMIZE=${UPDATE_KUSTOMIZE:-true}

        KUSTOMIZE_OVERLAYS=${{ inputs.overlays }}
        KUSTOMIZE_OVERLAYS=${KUSTOMIZE_OVERLAYS:-dev}

        SKIP_TESTS=${{ inputs.skip-tests }}
        SKIP_TESTS=${SKIP_TESTS:-false}

        METADATA_JSON=$(yj -y < ${GITHUB_ACTION_PATH}/profile/${{ inputs.profile }}.yml | jq -cr --arg COMPONENT ${{ inputs.component }} '.component[$COMPONENT]')
        OVERLAYS_JSON=$(yj -y < ${GITHUB_ACTION_PATH}/profile/${{ inputs.profile }}.yml | jq -cr --arg COMPONENT ${{ inputs.component }} --arg OVERLAYS ${KUSTOMIZE_OVERLAYS} '.component[$COMPONENT].kustomize.overlays[$OVERLAYS]')
        PARAMETERS_JSON=$(yj -y < ${GITHUB_ACTION_PATH}/profile/${{ inputs.profile }}.yml | jq -cr --arg COMPONENT ${{ inputs.component }} '.component[$COMPONENT].parameters')

        cat <<EOF | tee -a $GITHUB_STEP_SUMMARY

        [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

        \`\`\`
        metadata::${METADATA_JSON}
        overlays::${OVERLAYS_JSON}
        parameters::${PARAMETERS_JSON}
        update-kustomize::${UPDATE_KUSTOMIZE}
        skip-tests::${SKIP_TESTS}
        \`\`\`
        EOF

        echo "::set-output name=metadata::${METADATA_JSON}"
        echo "::set-output name=overlays::${OVERLAYS_JSON}"
        echo "::set-output name=parameters::${PARAMETERS_JSON}"
        echo "::set-output name=update-kustomize::${UPDATE_KUSTOMIZE}"
        echo "::set-output name=skip-tests::${SKIP_TESTS}"